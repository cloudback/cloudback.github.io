<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Cloudback</title>
    <link>https://cloudback.github.io/</link>
    <description>Recent content in Home on Cloudback</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://cloudback.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Amazon S3 Bucket via Access Key</title>
      <link>https://cloudback.github.io/custom-storages/amazon-s3-bucket-access-key/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/custom-storages/amazon-s3-bucket-access-key/</guid>
      <description>Backup GitHub repository using Amazon S3 Bucket Access Key About Amazon S3 Bucket Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance. This means customers of all sizes and industries can use it to store and protect any amount of data for a range of use cases, such as data lakes, websites, mobile applications, backup and restore, archive, enterprise applications, IoT devices, and big data analytics.</description>
    </item>
    
    <item>
      <title>Amazon S3 Bucket via Access Point</title>
      <link>https://cloudback.github.io/custom-storages/amazon-s3-bucket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/custom-storages/amazon-s3-bucket/</guid>
      <description>Backup GitHub repository using Amazon S3 Bucket About Amazon S3 Bucket Amazon Simple Storage Service (Amazon S3) is an object storage service that offers industry-leading scalability, data availability, security, and performance. This means customers of all sizes and industries can use it to store and protect any amount of data for a range of use cases, such as data lakes, websites, mobile applications, backup and restore, archive, enterprise applications, IoT devices, and big data analytics.</description>
    </item>
    
    <item>
      <title>How to backup GitHub repository</title>
      <link>https://cloudback.github.io/how-to/how-to-backup-github-repository/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/how-to/how-to-backup-github-repository/</guid>
      <description>How to backup GitHub repository Automatically created backups There are two ways how Cloudback creates GitHub repository backups. The first way is automatically created backups that are displayed in the repository card in the Cloudback Dashboard. The backups are created using the schedule that is set up in the repository settings. The repository status &amp;lsquo;Scheduled&amp;rsquo; indicates that Cloudback will automatically create GitHub repository backup using the schedule. Automatically created backups are marked with the &amp;lsquo;Clock&amp;rsquo; icon.</description>
    </item>
    
    <item>
      <title>How to create a new Microsoft Azure Blob Container</title>
      <link>https://cloudback.github.io/custom-storages/microsoft-azure-blob-container/create-microsoft-azure-blob-container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/custom-storages/microsoft-azure-blob-container/create-microsoft-azure-blob-container/</guid>
      <description>Backup GitHub repository using Azure: How to create a new Microsoft Azure Blob Container When creating GitHub repository backup using Cloudback you can set up your own Azure Storage where the backups will be saved. This article describes how to create a new Azure Blob Container for GitHub repository backups.
About Microsoft Azure Blob Containers Azure Blob storage is Microsoft&amp;rsquo;s object storage solution for the cloud that is optimized for storing massive amounts of unstructured data.</description>
    </item>
    
    <item>
      <title>Amazon S3 Glacier</title>
      <link>https://cloudback.github.io/custom-storages/amazon-s3-glacier/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/custom-storages/amazon-s3-glacier/</guid>
      <description>Backup GitHub repository using Amazon S3 Glacier About Amazon S3 Glacier Amazon S3 Glacier and S3 Glacier Deep Archive are secure, durable, and extremely low-cost Amazon S3 cloud storage classes for data archiving and long-term backup. They are designed to deliver 99.999999999% durability, and provide comprehensive security and compliance capabilities that can help meet even the most stringent regulatory requirements.
 Set up Amazon S3 Glacier as a custom storage  In the Cloudback Dashboard open the repository settings by clicking on the settings icon:    Click on the + New storage button:     Type a storage name</description>
    </item>
    
    <item>
      <title>How to create a new shared access signature (SAS)</title>
      <link>https://cloudback.github.io/custom-storages/microsoft-azure-blob-container/create-shared-access-signature/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/custom-storages/microsoft-azure-blob-container/create-shared-access-signature/</guid>
      <description>Backup GitHub repository using Azure: How to create a new shared access signature When creating GitHub repository backup using Cloudback you can set up your own Azure Storage where the backups will be saved. If you want to use Azure Storage for backups created by Cloudback you need to provide Cloudback access to your storage, which should be done by creating a new Shared Access Signature (SAS) inside your Azure Container.</description>
    </item>
    
    <item>
      <title>How to restore backup</title>
      <link>https://cloudback.github.io/how-to/how-to-restore-backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/how-to/how-to-restore-backup/</guid>
      <description>How to restore a backup of your GitHub repository After Cloudback created a backup of your GitHub repository, you may need to restore the backup at some point. The page describes the steps that should be taken to restore the backup.
To restore a backup, click on the restore icon on the repository card:
Cloudback uses a separate GitHub application to restore the backups. You can install the application manually using the following link.</description>
    </item>
    
    <item>
      <title>Google Cloud Storage Bucket</title>
      <link>https://cloudback.github.io/custom-storages/google-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/custom-storages/google-cloud/</guid>
      <description>Backup GitHub repository using Google Cloud Storage Bucket About Google Cloud Storage Bucket Cloud Storage allows world-wide storage and retrieval of any amount of data at any time. You can use Cloud Storage for a range of scenarios including serving website content, storing data for archival and disaster recovery, or distributing large data objects to users via direct download.
 Set up Google Cloud Storage Bucket  In the Cloudback Dashboard open the repository settings by clicking on the settings icon:    Click on the + New storage button:     Type a storage name</description>
    </item>
    
    <item>
      <title>How to download backup</title>
      <link>https://cloudback.github.io/how-to/how-to-download-backup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/how-to/how-to-download-backup/</guid>
      <description>How to download a backup of your GitHub repository After Cloudback created a backup of your GitHub repository, you may need to download the backup at some point. For example, the backup can be used if you want to manually restore it by pushing the code back to GitHub or to another Git repository management tool. Also, the backup can be downloaded in case you want to use the metadata somehow, such as labels, issues, comments, and milestones.</description>
    </item>
    
    <item>
      <title>Microsoft OneDrive</title>
      <link>https://cloudback.github.io/custom-storages/onedrive/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/custom-storages/onedrive/</guid>
      <description>Backup GitHub repository using Microsoft OneDrive About Microsoft OneDrive OneDrive is the cloud storage service that Microsoft offers to store all your files securely in one place, which you can then access from virtually anywhere.
 Set up Microsoft OneDrive Personal:App&amp;rsquo;s Folder  In the Cloudback Dashboard open the repository settings by clicking on the settings icon:    Click on the + New storage button:    Type a storage name:     Select Microsoft OneDrive Personal:App&#39;s Folder</description>
    </item>
    
    <item>
      <title>Alibaba Cloud Object Storage Service</title>
      <link>https://cloudback.github.io/custom-storages/alibaba-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/custom-storages/alibaba-cloud/</guid>
      <description>Backup GitHub repository using Alibaba Cloud Object Storage Service About Alibaba Cloud Object Storage Service Alibaba Cloud Object Storage Service (OSS) is an encrypted, secure, cost-effective, and easy-to-use object storage service that enables you to store, back up, and archive large amounts of data in the cloud, with a guaranteed durability of 99.9999999999%(12 9’s). RESTful APIs allow storage and access to OSS anywhere on the Internet. You can elastically scale the capacity and processing capability and choose from a variety of storage types to optimize the storage cost.</description>
    </item>
    
    <item>
      <title>Incident Response Plan</title>
      <link>https://cloudback.github.io/security/incident-response-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/security/incident-response-plan/</guid>
      <description>Incident Response Plan Introduction The purpose of the document is to establish the goals and the vision for the incident management process in the MYRTLECONSULTING S.A. (“we” or “Cloudback”). This document discusses the steps taken during an incident response plan.
Incident Response Process  The person who discovers the incident should contact Cloudback by one of the following ways:   Send an email to the support@cloudback.it Raise a request in the Cloudback issue tracker Use any contacts from Contact Us web page   If the person discovering the incident is a member of the Cloudback team, they will proceed to step four (4).</description>
    </item>
    
    <item>
      <title>Disaster Recovery Plan Policy</title>
      <link>https://cloudback.github.io/security/disaster-recovery-plan-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/security/disaster-recovery-plan-policy/</guid>
      <description>Disaster Recovery Plan Policy Overview The purpose of the policy is to establish the goals and the vision for the disaster recovery process in the MYRTLECONSULTING S.A. (&amp;ldquo;we&amp;rdquo; or &amp;ldquo;Cloudback&amp;rdquo;). It is important to understand that having a contingency plan in the event of a disaster gives Cloudback a competitive advantage. This policy requires management to financially support and diligently attend to disaster contingency planning efforts. Disasters are not limited to adverse weather conditions.</description>
    </item>
    
    <item>
      <title>Data Breach Response Policy</title>
      <link>https://cloudback.github.io/security/data-breach-response-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/security/data-breach-response-policy/</guid>
      <description>Data Breach Response Policy Purpose The purpose of the policy is to establish the goals and the vision for the breach response process in the MYRTLECONSULTING S.A. (&amp;ldquo;we&amp;rdquo; or &amp;ldquo;Cloudback&amp;rdquo;). This policy will clearly define to whom it applies and under what circumstances, and it will include the definition of a breach, staff roles and responsibilities, standards and metrics (e.g., to enable prioritization of the incidents), as well as reporting, remediation, and feedback mechanisms.</description>
    </item>
    
    <item>
      <title>Vulnerability Management Workflow</title>
      <link>https://cloudback.github.io/security/vulnerability-management-workflow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cloudback.github.io/security/vulnerability-management-workflow/</guid>
      <description>Vulnerability Management Workflow Introduction The purpose of the document is to describe the established vulnerability management workflow in the MYRTLECONSULTING S.A. (“we” or “Cloudback”).
Overview Vulnerability Management is the recurring process of identifying, classifying, prioritizing, mitigating, and remediating vulnerabilities. This document will focus on infrastructure vulnerabilities and the vulnerability management process. This process is designed to provide informationregarding Cloudback vulnerability workflow, promote healthy patch management among other preventative best-practices, and remediate risk; all with the end goal to better secure our environments.</description>
    </item>
    
  </channel>
</rss>